rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Restaurant Data:
    // - Anyone can read restaurant menus and details (public access)
    // - Only 'superowner' or 'owner' can create new restaurants
    // - 'superowner' can update any restaurant
    // - 'owner' can update only their assigned restaurants (using ownedRestaurantIds array)
    // - Only 'superowner' can delete restaurants
    match /restaurants/{restaurantId} {
      allow read: if true;

      allow create: if request.auth != null &&
                      (get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'superowner' ||
                       get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'owner');

      allow update: if request.auth != null &&
                      (
                        get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'superowner' ||
                        (
                          get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'owner' &&
                          restaurantId in get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.ownedRestaurantIds
                        )
                      );

      allow delete: if request.auth != null &&
                      get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'superowner';
    }

    // User Roles:
    // - Users can only read/write their own role document
    // - Allow webhook updates for subscription changes (no auth required)
    match /user_roles/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId || true;
      allow delete: if false;
    }

    // Counters (for restaurant IDs):
    // - Both superowners and owners can modify counters to create restaurants
    match /counters/{counterId} {
      allow read: if true;
      allow write: if request.auth != null && 
                      (get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'superowner' ||
                       get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'owner');
    }

    // Plans Collection:
    // - Authenticated users can read plan details
    // - No one can write to the plans collection through client SDKs
    match /plans/{planId} {
        allow read: if request.auth != null;
        allow write: if false;
    }
  }
}
